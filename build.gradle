plugins {
    id 'java'
    id 'idea'
    id 'antlr'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'raylras.zenls'
ext.moduleName = 'raylras.zenls'

java {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    antlr 'org.antlr:antlr4:4.13.1'
    implementation 'org.antlr:antlr4-runtime:4.13.1'
    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j:0.21.1'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'org.slf4j:slf4j-simple:2.0.9'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

test {
    useJUnitPlatform()
}

sourceSets {
    main {
        java.srcDirs += 'build/generated-src/antlr/main'
    }
}

generateGrammarSource {
    maxHeapSize = '64m'
    arguments += ['-visitor', '-listener', '-long-messages', '-package', 'raylras.zen.model.parser']
    outputDirectory = file('build/generated-src/antlr/main/raylras/zen/model/parser')
}

shadowJar {
    archiveClassifier.set('')
    archiveVersion.set('')
    manifest {
        attributes (
            'Implementation-Title': 'ZenScript Language Server',
            'Implementation-Version' : project.version
        )
    }
    dependencies {
        include dependency('org.antlr:antlr4-runtime')
        include dependency('org.eclipse.lsp4j:org.eclipse.lsp4j')
        include dependency('org.eclipse.lsp4j:org.eclipse.lsp4j.jsonrpc')
        include dependency('org.slf4j:slf4j-api')
        include dependency('org.slf4j:slf4j-simple')
        include dependency('com.google.code.gson:gson')
    }
    mergeServiceFiles()
    exclude 'META-INF/maven/**'
    exclude 'META-INF/versions/**'
    exclude 'META-INF/LICENSE.txt'
    exclude '**/*.java'
    exclude 'about.html'
}

tasks.register('dist', Copy) {
    from shadowJar.archiveFile
    into './vscode-extension/server'
}
