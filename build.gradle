plugins {
    id 'java'
    id 'idea'
    id 'antlr'
}

group 'raylras.zenls'
ext.moduleName = 'raylras.zenls'

java {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

repositories {
    mavenCentral()
}

dependencies {
    antlr 'org.antlr:antlr4:4.13.0'
    implementation 'org.antlr:antlr4-runtime:4.13.0'
    implementation 'org.eclipse.lsp4j:org.eclipse.lsp4j:0.20.1'
    implementation('org.slf4j:slf4j-api:2.0.7')
    implementation 'org.slf4j:slf4j-simple:2.0.7'
    implementation 'com.google.guava:guava:32.1.2-jre'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

test {
    useJUnitPlatform()
}

sourceSets {
    generated {
        java.srcDir 'generated-src/antlr/main'
    }
}

generateGrammarSource {
    maxHeapSize = '64m'
    arguments += ['-visitor', '-listener', '-long-messages', '-package', 'raylras.zen.code.parser']
    outputDirectory = new File(buildDir.toString() + '/generated-src/antlr/main/raylras/zen/code/parser')
}

task cleanServer(type: Delete) {
    delete './vscode-extension/server'
}

task copyServerJar(type: Copy) {
    dependsOn jar
    from "${buildDir}/libs/"
    into './vscode-extension/server'
    include "${project.name}-${project.version}.jar"
}

task copyServerDependencies(type: Copy) {
    from project.configurations.runtimeClasspath
    into './vscode-extension/server'
    include "antlr4-runtime-*.jar"
    include "org.eclipse.lsp4j-*.jar"
    include "org.eclipse.lsp4j.jsonrpc-*.jar"
    include 'org.eclipse.xtext.xbase.lib-*.jar'
    include "org.eclipse.lsp4j.generator-*.jar"
    include "gson-*.jar"
    include 'guava-*.jar'
    include 'slf4j-api-*.jar'
    include 'slf4j-simple-*.jar'
}

task dist() {
    dependsOn build, cleanServer, copyServerJar, copyServerDependencies
}

